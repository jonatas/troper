h2. UNIVERSIDADE PARANAENSE SISTEMAS DE INFORMAÇÃO

h1. 'TROPER' - Relatórios Web

h2. Jônatas Davi paganini

h2. Francisco Beltrão, 27 de fevereiro de 2009


Estágio realizado na área de _programação_, supervisionado pelo professor Almir Andrade submetido à Universidade Paranaense como parte dos requisitos para a obtenção do grau de Bacharel em Sistemas de Informação.
                                                    

h2. Equipe Técnica

** **Jônatas Davi Paganini** ( Estagiário )
** **Alexsandra Medeiros** ( Cliente responsável )
** **Almir Andrade** ( Coordernador de estágio )
** Este projeto também será supervisionado por outros programadores da Leosoft.

h2. Empresa

Leosoft CIA de Informática - Leonir de Campos EPP.
Avenida Júlio Assis Cavalheiro, 416 - Centro
Cep: 85601-010 - Francisco Beltrão - PR

h2. Declaração

A empresa Leosoft CIA de Informática declara, para devidos fins, que concorda com o projeto de estágio apresentado pelo(a) estagiário(a) Jônatas Davi Paganini, aluno(a) do curso de Sistemas de Informação do Campus de Francisco Beltrão da Universidade Paranaense, e se propõe a oferecer as condições necessárias para o bom andamento do mesmo.


Francisco Beltrão, 27 de fevereiro de 2009.

Alexsandra Medeiros

# TODO -  A declaração deve ser, de preferência, em papel timbrado da empresa

h2. Introdução

Sistema para gerar e executar relatórios na web, agregado a outro sistema já existente.
Projetos de software em geral apresentam foco em algumas partes e vantagens para as mesmas. A Leosoft sempre teve um bom feedback em um de seus sistemas por possuir uma ferramenta para construir relatórios de maneira fácil e útil. Os usuários se sentem bem por ter liberdade para construir/modificar relatórios para suas necessidades específicas.

h2. Objetivos (geral)

O objetivo do projeto é encontrar um escopo para a construção de relatórios simples e personalizados.

h3. Construir relatórios  (objetivos específicos)

Uma inteface estilo 'passo a passo' para construir um relatório.

h3. Executar relatórios (objetivos específicos)

Uma interface gerada automaticamente apartir dos filtros pré-definidos para o relatório, pegando os dados do mesmo, enviando para o servidor processar, executar os filtros e construir a interface para apresentação dos dados.

h2. Justificativa

* Necessidade da ferramenta na web 

A maioria dos projetos web da "Leosoft":http://www.leosoft.com.br utilizam o framework "Ruby On Rails":http://rubyonrails.org, e este não possui nenhuma ferramenta pronta para executar este tipo de trabalho. 

* Ferramentas complicadas só são úteis para pessoas especializadas

Como solução para a empresa, os programadores e suporte dos sistemas escritos em java e ruby, usam iReport, que é uma ferramenta java para criar os relatórios para os clientes.
iReport é uma interface robusta escrita em java, que dá a possibilidade de ajustar todos os aspectos da construção e desenvolvimento de um arquivo _jasper report_.  Jasper é uma biblioteca para criação de documentos em diversos formatos (pdf, html, xsl, etc.) com leiaute personalizado a partir de um arquivo **jrxml** - jasper report xml.  

* Personalização

Cada pessoa gosta de uma cor, ver o nome antes do telefone, não usa o telefone e apenas celular. Dificilmente um sistema irá agradar a todos os usuários. Essa interface irá trazer ao usuário uma forma para fazer estas mudanças sem a necessidade de um pedido aos desenvolvedores do software.
O uso de uma ferramenta complexa para a execução do trabalho diminui a possibilidade de o usuário fazer tarefas triviais desvalorizando o projeto por detalhes que até então eram sem importância.



h2. Valores agregados ao sistema

* Ser plugável

Irá funcionar para os sistemas existentes da Leosoft. Isto agregará valor a outros sistemas que já possuem valor para os clientes.

* Ser flexível

Entender os modelos e regras do sistema são tarefas relativamente simples em projetos rails. Com o uso do framework existe a possibilidade de trabalhar com as entidades e seus relacionamentos através do mapeador objeto relacional "ActiveRecord":http://ar.rubyonrails.org/ que é um framework que conecta objetos de negócio a tabelas de banco de dados, facilita a criação e persistência de modelos de domínio.
Desta forma, é possível extender o fonte de dados padrão usando as próprias definições dos modelos de dados.

h3. Leosoft

A empresa terá uma folga significativa na construção e manutenção de relatórios. 
Poderá oferecer mais um módulo interessant para o cliente.
Os valores de negócios para o cliente são proporcionais à maturidade do sistema alvo. Pois se este estiver aplicando a um sistema magro, terá uma fonte de dados magra e será necessário a elaboração de visões gerenciais e fontes de dados inteligentes conforme a demanda de fonte de dados do cliente final.


h2. Ferramentas utilizadas na construção do sistema

Basicamente uma aplicação web consiste em dois lados do aplicativo: cliente e servidor.

* Interface - cliente
** jQuery 
uma biblioteca para simplificar o manuseio de documentos HTML
** ExtJs
uma biblioteca para construir interfaces ricas na web usando javascript

* Background - servidor
** testes
*** cucumber
é uma ferramenta que permite os desenvolvedores ou clientes descrever como o software deve se comportar em texto puro. O texto é escrito usando uma linguagem de domínio específico de negócio. Também serve como documentação e testes automatizados
**** rspec
permite o desenvolvimento orientado a comportamento usado juntamente com o cucumber para o desenvolvimento e inspeção de comportamentos de um sistema
*** integração contínua
plugin para integração contínua e desenvolvimento orientado a testes, permitindo a execução automática de tarefas triviais
** banco de dados
*** Postgresql 8.3
** documentação
*** rDoc
documenta os códigos-fonte do projeto
*** RedCloth
para a geração da documentação de formato texto para html
*** liquid
biblioteca para a geração de templates

h2. Recursos humanos e habilidades

* Programador & Analista
** Linguagens de programação
*** Ruby e as seguintes bibliotecas:
**** liquid 
**** RubyGems
**** rSpec
**** Rails
***** ActiveRecord
***** ActionController
**** RedCloth e Textile
**** Rake
*** Javascript e as seguintes bibliotecas:
**** jQuery
**** ExtJs
**** FireBug

* Cliente
** entender o objetivo do sistema
** testar a interação do sistema e validar as funcionalidades de acordo com o requisitado

* Gerente do projeto
** controle do andamento
** gerência de remanejamento dos recursos humanos
** habilidades para negociação e esclarecimento ao cliente

h2. Cronograma

As datas do cronograma ainda não estão definidas, mas o projeto basicamente estará disponível em três releases:

h3. Primeira fase - Criação do ambiente e o núcleo da funcionalidade.

Nesta fase será desenvolvida as classes responsáveis pela estrutura principal do relatório. Será desenvolvida a biblioteca usada para responder pelas necessidades do documento:

# O que **vai ter** 
## Escolher e manipular uma fonte de dados
## Configure as colunas adicionando as que deseja adicionar para o relatório

## Configure a template
### manipular as colunas permitindo formatar e sobrescrever
### manipular o título e cabeçalho

## Quanto ao leiaute e exibição do relatório
### carregar os dados do relatório
### carregar a saida html a partir de uma template 
### será possível ver o documento apartir de um arquivo html puro

# O que **NÃO VAI TER** 
## totalizadores ou resumos
## interface para criar o relatório
## filtros
## interface para executar o relatório

h3. Segunda fase - a interface com o usuário

Nesta fase, será criada uma forma de o usuário interagir com o sistema e criar os seus próprios relatórios, permitindo personalizar os elementos que 
   
# Interface para criar e rodar o documento
## Permitir que o usuário consiga montar o relatório
### Escolha a fonte de dados
### Configure as colunas
### Configure a template
### Execute o relatório

h3. Terceira fase

# Melhorias - amadurecimento da idéia e ferramenta
## o background e interface permitir agrupamento e sumarização
## a interface permitir adicionar filtros


h3. Fundamentação teórica

Por que utilizar a metodologia Extreme Programming?

bq. Extreme Programming (XP) é uma metodologia que se aproxima da realidade do ambiente de desenvolvimento de softwares. Com 8 anos de existência, vem melhorando muitas empresas de diversos tamanhos pelo mundo.
A metodologia foi desenhada para entregar o software que o cliente pediu quando ele pediu. XP efatiza também o trabalho em time. Gerentes e clientes e desenvolvedores compõem um time dedicado a entregar um software de qualidade.

Por que usar Behaviour Development Driven?

bq. Desenvolvimento orientado a comportamento (BDD) traz uma interação completa do desenvolvimento orientado a testes e desenvolvimento orientado a domínio, fazendo relacionamentos entre essas forças tornando o desenvolvimento de software mais evidente.

Por que usar estórias do usuário ao invés de casos de uso?

bq. Essa é uma questão comum, e muitas pessoas do XP consideram estórias como uma forma simplificada de casos de uso. Casos de uso  estórias são similares maneiras de organizar requisitos. Eles são diferentes no que organizam para diferentes propósitos. Casos de uso organizam requisitos na forma narrativa e como os usuários se relacionam e usam o sistema. Mantendo o foco nos alvos e como o sistema interage com estes alvos. Estórias XP quebram requisitos em pequenos pedaços para planejar propósitos. Elas são quebradas em partes pequenas até poderem ser estimadas.


h3. Referências

**Extreme Programming**: http://www.extremeprogramming.org/what.html. Acesso em 26 de março de 2009. 

**Behavior Development Driven**: http://behaviour-driven.org. Acesso em 26 de março de 2009.

**FOWLER, M. Use cases and Stories**: http://www.martinfowler.com/bliki/UseCasesAndStories.html . Acesso em 26 de março de 2009.



